ggplot(gl, aes(pc, Age)) +
geom_point()
ggplot(gl,aes(x = pc)) +
geom_density(alpha = 0.5)
ggplot(gl, aes(pc, Age)) +
geom_point()
##### Splitting sample ######
set.seed(123)
#Chose random numbers from 1 to number of rows of gl
index <- sample(1:nrow(gl), round(nrow(gl) * 0.65))
train <- gl[index, ]
test  <- gl[-index, ]
#compare linear line with train data
ggplot(train, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red")
ggplot(gl, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(gl, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm",se = FALSE)
ggplot(gl, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm",se = FALSE) +
geom_smooth(se = FALSE, color = "red")
#compare density graph for test and train data
ggplot(train, aes(x = pc)) +
geom_density(trim = TRUE,col="red") +
geom_density(data = test, trim = TRUE,col="black")
library(modelr)
mdl<-lm(Age ~ pc, data=train)
summary(mdl)
#compare linear line with data
ggplot(test, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red")
#take residuals
mdl.res = resid(mdl)
ggplot(train, aes(pc,mdl.res),xlab="Per Capita", ylab="Residuals") +
geom_ref_line(h = 0) +
geom_point() +
geom_smooth(se = FALSE) +
ggtitle("Residuals vs Fitted")
qqnorm(mdl.res,main="QQ plot of residuals",pch=19)
qqline(mdl.res)
shapiro.test(mdl.res)
library("car")
qqPlot(mdl.res)
library(ggpubr)
ggqqplot(mdl.res)
summary(mdl)
test %>%
add_predictions(mdl) %>%
summarise(MSE = mean((Age - pred)^2))
train %>%
add_predictions(mdl) %>%
summarise(MSE = mean((Age - pred)^2))
summary(mdl)
#compare linear line with train data
ggplot(train, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red")
# Graph is not showing linear correlation => we will do log transformation
gl<-mutate(gl, pc=ln(PerCapitaMean), Age)
qqnorm(mdl.res,main="QQ plot of residuals",pch=19)
install.packages("ggpubr")
ggqqplot(mdl.res)
shapiro.test(mdl.res)
qqPlot(mdl.res)
View(gl)
help("qqPlot")
View(test)
ggplot(train, aes(pc,mdl.res),xlab="Per Capita", ylab="Residuals") +
geom_ref_line(h = 0) +
geom_point() +
geom_smooth(se = FALSE) +
ggtitle("Residuals vs Fitted")
ggplot(train, aes(pc,mdl.res),xlab="Per Capita", ylab="Residuals") +
geom_ref_line(h = 0) +
geom_point() +
geom_smooth(se = FALSE) +
ggtitle("Residuals vs Fitted")
ggplot(train, aes(pc,mdl.res)) +
geom_ref_line(h = 0) +
geom_point() +
geom_smooth(se = FALSE) +
ggtitle("Residuals vs Fitted") +
labs(x = "New x label")
ggplot(train, aes(pc,mdl.res)) +
geom_ref_line(h = 0) +
geom_point() +
geom_smooth(se = FALSE) +
ggtitle("Residuals vs Fitted") +
labs(x = "PerCapita", y="Residulas")
ggplot(train, aes(pc,mdl.res)) +
geom_ref_line(h = 0) +
geom_point() +
geom_smooth(se = FALSE) +
ggtitle("Residuals vs Fitted") +
labs(x = "PerCapita", y="Residuals")
#add column with predictions
(test <- test %>%
add_predictions(mdl))
View(test)
#### Load GDP #####
GDP<-read_csv("GDP.csv",col_names = c("Country","Code","Year","PerCapita"), col_types = (cols(PerCapita = col_integer()) ),skip=1)
glimpse(GDP)
g<-filter(GDP, Year>1965)
g<-group_by(g,Country) %>%
summarize(PerCapitaMean=mean(PerCapita,  na.rm = TRUE))
life<-read_excel("Life.xlsx", col_names = c("Country","Age"),skip=1)
glimpse(life)
l<-mutate(Life, Age = as.double(Age), Country=trimws(Country, which = c("both")))
glimpse(l)
gl<-inner_join(g, l, by = "Country")
glimpse(gl)
ggplot(gl, aes(PerCapitaMean, Age)) +
geom_point()
# Graph is not showing linear correlation => we will do log transformation
gl<-mutate(gl, pc=log(PerCapitaMean), Age)
#this looks like linear correlation
ggplot(gl, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm",se = FALSE) +
geom_smooth(se = FALSE, color = "red")
View(GDP)
##### Splitting sample ######
set.seed(123)
#Chose random numbers from 1 to number of rows of gl
index <- sample(1:nrow(gl), round(nrow(gl) * 0.65))
train <- gl[index, ]
test  <- gl[-index, ]
#compare linear line with train data
ggplot(train, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red")
#compare density graph for test and train data
ggplot(train, aes(x = pc)) +
geom_density(trim = TRUE,col="red") +
geom_density(data = test, trim = TRUE,col="black")
View(test)
View(train)
mdl<-lm(Age ~ pc, data=train)
summary(mdl)
#add column with predictions
(test <- test %>%
add_predictions(mdl))
View(test)
#compare linear line with data
ggplot(test, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red")
test %>%
add_predictions(mdl) %>%
summarise(MSE = mean((Age - pred)^2))
train %>%
add_predictions(mdl) %>%
summarise(MSE = mean((Age - pred)^2))
#take residuals
mdl.res = resid(mdl)
ggplot(train, aes(pc,mdl.res)) +
geom_ref_line(h = 0) +
geom_point() +
geom_smooth(se = FALSE) +
ggtitle("Residuals vs Fitted") +
labs(x = "PerCapita", y="Residuals")
#compare linear line with data
ggplot(test, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red")
#compare linear line with data
ggplot(test, aes(pc, Age, label=Conutry)) +
geom_point() +
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red")
View(test)
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point() +
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red")
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_text(aes(label=Country))
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_text(aes(label=Country=ifelse(Age<65,as.character(Name),'')),hjust=0,vjust=0)
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_text(aes(label=ifelse(Age<65,as.character(Country),'')),hjust=0,vjust=0)
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_text(aes(label=ifelse(Age<62,as.character(Country),'')),hjust=0,vjust=0)
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_text(aes(label=ifelse(Age<62,as.character(Country),'')),hjust=-1,vjust=0)
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_text(aes(label=ifelse(Age<62,as.character(Country),'')),hjust=1,vjust=1)
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_text(aes(label=ifelse(Age<62,as.character(Country),'')),hjust=0,vjust=1)
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_text(aes(label=ifelse(Age<62,as.character(Country),'')),hjust=-1,vjust=1)
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_text(aes(label=ifelse(Age<62,as.character(Country),'')),hjust=1,vjust=0)
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_text(aes(label=ifelse(Age<62,as.character(Country),'')),hjust=0,vjust=0)
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label = label=ifelse(Age<62,as.character(Country),'')),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50') +
#compare MSE
test %>%
add_predictions(mdl) %>%
summarise(MSE = mean((Age - pred)^2))
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label = label=ifelse(Age<62,as.character(Country),'')),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50') +
#compare MSE
test %>%
add_predictions(mdl) %>%
summarise(MSE = mean((Age - pred)^2))
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label = label=ifelse(Age<62,as.character(Country),'')),
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label = label=ifelse(Age<62,as.character(Country),'')),+
box.padding   = 0.35,
point.padding = 0.5,
segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label = label=ifelse(Age<62,as.character(Country),'')),+
box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label = label=ifelse(Age<62,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse(Age<62,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#for label of points
library(ggplot2)
library(ggrepel)
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse(Age<62,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse(80<Age<62,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse(Age<62 && Age>80,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse(Age<62 && Age>80,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse(Age<62 || Age>80,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse( Age>80,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse(Age>80 ||Age<62 ,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse(Age>80 || Age<62 ,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse((Age>80 || Age<62),as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse(Age<62,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse(Age<75,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#compare linear line with data
ggplot(test, aes(pc, Age, label=Country)) +
geom_point()+
geom_smooth(method = "lm") +
geom_smooth(se = FALSE, color = "red") +
geom_label_repel(aes(label =ifelse(Age>75,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
View(gl)
ggplot(train, aes(pc,mdl.res)) +
geom_ref_line(h = 0) +
geom_point() +
geom_smooth(se = FALSE) +
ggtitle("Residuals vs Fitted") +
labs(x = "PerCapita", y="Residuals")
library("tidyverse")
#library("rio")
library("readxl")
#### Load GDP #####
# from https://ourworldindata.org/grapher/average-real-gdp-per-capita-across-countries-and-regions?time=2016
GDP<-read_csv("GDP.csv",col_names = c("Country","Code","Year","PerCapita"), col_types = (cols(PerCapita = col_integer()) ),skip=1)
glimpse(GDP)
g<-filter(GDP, Year>1965)
g<-group_by(g,Country) %>%
summarize(PerCapitaMean=mean(PerCapita,  na.rm = TRUE))
#####Load Life exp #####
#from https://en.wikipedia.org/wiki/List_of_countries_by_life_expectancy
life<-read_excel("Life.xlsx", col_names = c("Country","Age"),skip=1)
glimpse(life)
l<-mutate(Life, Age = as.double(Age))
glimpse(l)
gl<-inner_join(g, l, by = "Country")
glimpse(gl)
ggplot(gl, aes(PerCapitaMean, Age)) +
geom_point() +
ggtitle("Gaph1: Correlation between GDP and Life Expectancy")
# Graph is not showing linear correlation => we will do log transformation
gl<-mutate(gl, pc=log(PerCapitaMean), Age)
#for label of points
library(ggplot2)
library(ggrepel)
#this looks ,more like linear correlation
ggplot(gl, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm",se = FALSE)  +
geom_smooth(method ="loess" ,se = FALSE, color = "red", span=0.50) +
ggtitle("Gaph2: Correlation between log(PerCapita) and Life Expectancy") +
labs(x = "log(PerCapita)", y="Age")+
geom_label_repel(aes(label =ifelse(Age<55,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#this looks ,more like linear correlation
ggplot(gl, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm",se = FALSE)  +
geom_smooth(method ="loess" ,se = FALSE, color = "red", span=0.50) +
ggtitle("Gaph2: Correlation between log(PerCapita) and Life Expectancy") +
labs(x = "log(PerCapita)", y="Age")+
geom_label_repel(aes(label =ifelse(Age<55 | Age>80,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#this looks ,more like linear correlation
ggplot(gl, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm",se = FALSE)  +
geom_smooth(method ="loess" ,se = FALSE, color = "red", span=0.50) +
ggtitle("Gaph2: Correlation between log(PerCapita) and Life Expectancy") +
labs(x = "log(PerCapita)", y="Age")+
geom_label_repel(aes(label =ifelse(Age<55 | Age>85,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#this looks ,more like linear correlation
ggplot(gl, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm",se = FALSE)  +
geom_smooth(method ="loess" ,se = FALSE, color = "red", span=0.50) +
ggtitle("Gaph2: Correlation between log(PerCapita) and Life Expectancy") +
labs(x = "log(PerCapita)", y="Age")+
geom_label_repel(aes(label =ifelse(Age<55 | Age>82,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#this looks ,more like linear correlation
ggplot(gl, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm",se = FALSE)  +
geom_smooth(method ="loess" ,se = FALSE, color = "red", span=0.50) +
ggtitle("Gaph2: Correlation between log(PerCapita) and Life Expectancy") +
labs(x = "log(PerCapita)", y="Age")+
geom_label_repel(aes(label =ifelse(Age<55 | Age>84,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
#this looks ,more like linear correlation
ggplot(gl, aes(pc, Age)) +
geom_point() +
geom_smooth(method = "lm",se = FALSE)  +
geom_smooth(method ="loess" ,se = FALSE, color = "red", span=0.50) +
ggtitle("Gaph2: Correlation between log(PerCapita) and Life Expectancy") +
labs(x = "log(PerCapita)", y="Age")+
geom_label_repel(aes(label =ifelse(Age<55 | Age>83,as.character(Country),'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
##### Splitting sample ######
set.seed(123)
#Chose random numbers from 1 to number of rows of gl
index <- sample(1:nrow(gl), round(nrow(gl) * 0.65))
train <- gl[index, ]
test  <- gl[-index, ]
mdl<-lm(Age ~ pc, data=train)
summary(mdl)
#for prediction
install.packages("modelr")
library(modelr)
#add column with predictions
(test <- test %>%
add_predictions(mdl))
(train <- train %>%
add_predictions(mdl))
train<-mutate(train, d=Age-pred)
#compare MSE
(MSE_train<-train %>%
add_predictions(mdl) %>%
summarise(MSE = mean((Age - pred)^2)))
(MSE_test<-test %>%
add_predictions(mdl) %>%
summarise(MSE = mean((Age - pred)^2)))
#take residuals
mdl.res = resid(mdl)
ggplot(train, aes(pc,mdl.res)) +
geom_ref_line(h = 0) +
geom_point() +
geom_smooth(se = FALSE) +
ggtitle("Graph 3: Residuals vs Fitted") +
labs(x = "PerCapita", y="Residuals")+
geom_label_repel(aes(label =ifelse(mdl.res> -20 & mdl.res< -5,Country,'')),box.padding= 0.35, point.padding = 0.5, segment.color = 'grey50')
ggplot(train, aes(pc,mdl.res)) +
geom_ref_line(h = 0) +
geom_point() +
geom_smooth(se = FALSE) +
ggtitle("Graph 3: Residuals vs Fitted") +
labs(x = "PerCapita", y="Residuals")+
qqnorm(mdl.res,main="Graph 4: QQ plot of residuals",pch=19)
qqline(mdl.res)
identify(mdl.res)
